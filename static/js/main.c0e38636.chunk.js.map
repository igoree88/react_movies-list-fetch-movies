{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/API/Api.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","movieTitle","url","fetch","then","response","json","result","Response","Error","FindMovie","addMovie","doubleAddError","setDoubleAddError","useState","query","setQuery","findedMovie","setFindedMovie","queryError","setQueryError","logError","useEffect","onSubmit","event","preventDefault","movieFromServer","catch","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","some","currentMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0e38636.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=d963524c';\n\nconst request = (url: string): Promise<any> => {\n  return fetch(`${API_URL}${url}`)\n    .then(response => response.json())\n    .then(result => {\n      if (result.Response === 'False') {\n        throw new Error();\n      }\n\n      return result;\n    });\n};\n\nexport const getMovie = (movieTitle: string):Promise<Movie | any> => {\n  return request(`&t=${movieTitle}`);\n};\n","import classNames from 'classnames';\nimport React, { useState, useEffect } from 'react';\nimport { getMovie } from '../API';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ninterface Props {\n  addMovie: (movie: Movie) => void,\n  doubleAddError: boolean;\n  setDoubleAddError: (value: boolean) => void,\n}\n\nexport const FindMovie: React.FC<Props> = (\n  {\n    addMovie,\n    doubleAddError,\n    setDoubleAddError,\n  },\n) => {\n  const [query, setQuery] = useState<string>('');\n  const [findedMovie, setFindedMovie] = useState<Movie | null>(null);\n  const [queryError, setQueryError] = useState(false);\n\n  const logError = () => {\n    setQueryError(true);\n    setFindedMovie(null);\n  };\n\n  useEffect(() => {\n\n  }, [doubleAddError]);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    getMovie(query).then(movieFromServer => {\n      setFindedMovie(movieFromServer);\n    })\n      .catch(logError);\n\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': queryError },\n              )}\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setQueryError(false);\n                setDoubleAddError(false);\n              }}\n            />\n          </div>\n          {queryError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n              disabled={queryError || !query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={queryError || (findedMovie === null)}\n              onClick={() => {\n                if (findedMovie) {\n                  addMovie(findedMovie);\n                  setFindedMovie(null);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {doubleAddError\n          ? (\n            <div className=\"notification is-danger\">\n              <p>This movie has already been added.</p>\n              <p>Please try to find another movie.</p>\n            </div>\n          ) : (\n            findedMovie && (\n              <MovieCard\n                movie={findedMovie}\n              />\n            )\n          )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [doubleAddError, setDoubleAddError] = useState(false);\n\n  const addMovie = (movie: Movie): void => {\n    const dublMovie = movies\n      .some(currentMovie => currentMovie.imdbID === movie.imdbID);\n\n    if (!dublMovie) {\n      setMovies([\n        ...movies,\n        movie,\n      ]);\n    } else {\n      setDoubleAddError(true);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          doubleAddError={doubleAddError}\n          setDoubleAddError={setDoubleAddError}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}